<UserControl
    x:Class="MovieApp.WPF.Controls.PasswordChangePanel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:components="clr-namespace:PasswordBoxMVVM.Components;assembly=PasswordBoxMVVM"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:MovieApp.WPF.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:validationRules="clr-namespace:MovieApp.WPF.ValidationRules"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <Border
        Background="{StaticResource BackgroundBrush2}"
        BorderBrush="{StaticResource BrushPrimary2}"
        BorderThickness="4"
        CornerRadius="6">

        <Border.Effect>
            <DropShadowEffect
                BlurRadius="10"
                Opacity="0.4"
                RenderingBias="Quality"
                ShadowDepth="3"
                Color="Black" />
        </Border.Effect>

        <StackPanel Margin="30,20">
            <TextBlock
                FontSize="24"
                FontWeight="Medium"
                Foreground="{StaticResource BrushPrimary2}"
                Text="{DynamicResource PasswordChangePanel.Password}" />

            <RadioButton
                x:Name="changePasswordButton"
                Width="200"
                Margin="0,20,0,0"
                HorizontalAlignment="Left"
                Background="{StaticResource BrushPrimary1}"
                BorderBrush="{StaticResource BrushPrimary2}"
                BorderThickness="2"
                Content="{DynamicResource PasswordChangePanel.ChangePassword}"
                Foreground="{StaticResource BrushPrimary2}">
                <RadioButton.Style>
                    <Style BasedOn="{StaticResource MaterialDesignFlatButton}" TargetType="RadioButton">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource BrushPrimary3}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </RadioButton.Style>
            </RadioButton>

            <StackPanel Orientation="Vertical" Visibility="{Binding ElementName=changePasswordButton, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Separator Margin="0,20,0,20" Background="{StaticResource BrushPrimary2}" />

                <WrapPanel Margin="0,5" Orientation="Horizontal">
                    <TextBlock
                        Width="200"
                        Margin="10,0"
                        VerticalAlignment="Center"
                        FontSize="18"
                        Foreground="{StaticResource BrushPrimary2}"
                        Text="{DynamicResource PasswordChangePanel.OldPassword}" />
                    <components:BindablePasswordBox
                        Width="260"
                        VerticalAlignment="Center"
                        BorderBrush="{StaticResource BrushPrimary2}"
                        FontSize="18"
                        Foreground="{StaticResource BrushPrimary3}"
                        Password="{Binding OldPassword}" />
                </WrapPanel>

                <WrapPanel Margin="0,5" Orientation="Horizontal">
                    <TextBlock
                        Width="200"
                        Margin="10,0"
                        VerticalAlignment="Center"
                        FontSize="18"
                        Foreground="{StaticResource BrushPrimary2}"
                        Text="{DynamicResource PasswordChangePanel.NewPassword}" />
                    <components:BindablePasswordBox
                        x:Name="newPassword"
                        Width="260"
                        VerticalAlignment="Center"
                        BorderBrush="{StaticResource BrushPrimary2}"
                        FontSize="18"
                        Foreground="{StaticResource BrushPrimary3}"
                        Validation.ErrorTemplate="{StaticResource errorValidationTemplate}">
                        <components:BindablePasswordBox.Password>
                            <Binding Path="NewPassword" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validationRules:PasswordRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </components:BindablePasswordBox.Password>
                    </components:BindablePasswordBox>
                </WrapPanel>

                <WrapPanel Margin="0,5" Orientation="Horizontal">
                    <TextBlock
                        Width="200"
                        Margin="10,0"
                        VerticalAlignment="Center"
                        FontSize="18"
                        Foreground="{StaticResource BrushPrimary2}"
                        Text="{DynamicResource PasswordChangePanel.ConfirmPassword}" />
                    <components:BindablePasswordBox
                        x:Name="confirmPassword"
                        Width="260"
                        VerticalAlignment="Center"
                        BorderBrush="{StaticResource BrushPrimary2}"
                        FontSize="18"
                        Foreground="{StaticResource BrushPrimary3}"
                        Validation.ErrorTemplate="{StaticResource errorValidationTemplate}">
                        <components:BindablePasswordBox.Password>
                            <Binding Path="ConfirmPassword" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validationRules:PasswordRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </components:BindablePasswordBox.Password>
                    </components:BindablePasswordBox>
                </WrapPanel>

                <TextBlock
                    Margin="10,10,0,0"
                    HorizontalAlignment="Left"
                    DataContext="{Binding ErrorMessageViewModel}"
                    FontSize="20"
                    Foreground="DarkRed"
                    Text="{Binding Message}"
                    Visibility="{Binding HasMessage, Converter={StaticResource BooleanToVisibilityConverter}}" />

                <TextBlock
                    Margin="10,10,0,0"
                    HorizontalAlignment="Left"
                    DataContext="{Binding InfoMessageViewModel}"
                    FontSize="18"
                    Foreground="Green"
                    Text="{Binding Message}"
                    Visibility="{Binding HasMessage, Converter={StaticResource BooleanToVisibilityConverter}}" />

                <Button
                    Width="200"
                    Margin="0,20,0,0"
                    HorizontalAlignment="Left"
                    Background="{StaticResource BrushPrimary2}"
                    BorderBrush="{StaticResource BrushPrimary2}"
                    Command="{Binding ChangePasswordCommand}"
                    Content="{DynamicResource PasswordChangePanel.Change}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFlatAccentBgButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=confirmPassword}" Value="False" />
                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=newPassword}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </StackPanel>
    </Border>
</UserControl>